{"version":3,"sources":["components/AppBar.tsx","store/types.ts","config.ts","auth/csrfToken.ts","auth/aaxios.ts","store/actions.ts","components/Spiner.tsx","components/TableRow.tsx","components/Table.tsx","components/MainTable.tsx","components/ReadyPage.tsx","App.tsx","reportWebVitals.ts","store/reducers.ts","store/index.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","to","process","Button","actionTypes","Urls","fetchRowsUrl","fetchRowsDoneUrl","angaraUrl","checkProductUrl","deleteUrl","config","headers","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","deleteRow","id","type","DELETE_ROW","payload","fillOutRowWithDataThunk","oneCId","dispatch","a","loadingAction","axios","get","res","data","check","have_photo","have_video","have_description","have_attribute","have_photo_in_folder","newRow","uuid","uuidv4","ang_name","brand","catNumber","cat","photo","video","description","isDone","errorMessageAction","Error","toggleSnakbarAction","console","log","response","populatedRow","photoSite","descSite","attibute","linkToSite","post","row","ADD_EMPTY_ROW","errorMessage","hasOwnProperty","error","SET_ERROR_MESSAGE","open","TOGGLE_SNACKBAR","checkAllAttributesAction","ready","getState","mainState","rows","rowsReady","rowsInWork","Promise","all","map","newRows","UPDATE_ROWS_READY_ATTRS","UPDATE_ROWS_ATTRS","isLoading","IS_LOADING","putRowToServerThunk","put","PUT_ROW_TO_SERVER","display","marginLeft","Spiner","CircularProgress","greenColor","green","greyColor","grey","redColor","red","muttedText","textDecoration","greenText","redText","TableRowComponent","myRow","useDispatch","useState","desc","setDesc","React","checked","setChecked","handleDelete","window","confirm","delete","deleteRowThunk","checkbox","Checkbox","onChange","event","target","TOGGLE_DONE","inputProps","Fragment","TableRow","TableCell","component","scope","align","style","minWidth","TextField","label","multiline","value","CHANGE_DESCRIPTION","onBlur","href","rel","onClick","table","topRowNumber","padding","TableComponent","TableContainer","Paper","Table","TableHead","TableBody","Alert","props","elevation","TestPage","useSelector","state","openSnakbar","handleClose","reason","setOneCId","useEffect","FETCH_ROWS_IN_WORK","errorArr","key","push","JSON","stringify","Grid","container","item","xs","parseInt","newValue","isNaN","size","fullWidth","onKeyDown","Fab","Snackbar","autoHideDuration","onClose","severity","str","ReadyPage","FETCH_ROWS_READY","App","basename","Box","path","MainTable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","rootReducer","combineReducers","action","filter","SET_ONE_C_ID","index","findIndex","idx","FETCH_DATA_A77","descRow","changeRow","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.46abedf2.chunk.js","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link to={`${process.env.PUBLIC_URL}/`}>Home</Link>\n          </Typography>\n          <Link to={`${process.env.PUBLIC_URL}/testpage/`}>\n            <Button color=\"inherit\">READY ROWS</Button>\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","export enum actionTypes {\n  FETCH_ROWS_IN_WORK = 'FETCH_ROWS_IN_WORK',\n  FETCH_ROWS_READY = 'FETCH_ROWS_READY',\n  ADD_EMPTY_ROW = 'ADD_EMPTY_ROW',\n  DELETE_ROW = 'DELETE_ROW',\n  MARK_ROW_READY = 'MARK_ROW_READY',\n  MARK_ROW_UNREADY = 'MARK_ROW_UNREADY',\n  SAVE_ROW_TO_SERVER = 'SAVE_ROW_TO_SERVER',\n  SET_ONE_C_ID = 'SET_ONE_C_ID',\n  TOGGLE_DONE = 'TOGGLE_DONE',\n  FETCH_DATA_A77 = 'FETCH_DATA_A77',\n  SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE',\n  TOGGLE_SNACKBAR = 'TOGGLE_SNACKBAR',\n  IS_LOADING = 'IS_LOADING',\n  UPDATE_ROWS_ATTRS = 'UPDATE_ROWS_ATTRS',\n  SAVE_DESCRIPTION_TO_SERVER = 'SAVE_DESCRIPTION_TO_SERVER',\n  CHANGE_DESCRIPTION = 'CHANGE_DESCRIPTION',\n  PUT_ROW_TO_SERVER = 'PUT_ROW_TO_SERVER',\n  UPDATE_ROWS_READY_ATTRS = 'UPDATE_ROWS_READY_ATTRS',\n}\n","interface IUrls {\n  fetchRowsUrl: string;\n  angaraUrl: string;\n  checkProductUrl: string;\n  deleteUrl: string;\n  fetchRowsDoneUrl: string;\n}\n\nexport const Urlss: IUrls = {\n  fetchRowsUrl: 'https://partshub.tk/vasyainterface/workingrows/rows/',\n  fetchRowsDoneUrl: 'https://partshub.tk/vasyainterface/workingrows/rowsdone/',\n  angaraUrl:\n    'http://angara77.com/admin33338/dataApi/vasyaInterfaceEndpoint.php?oneCId=',\n  checkProductUrl: 'https://partshub.tk/vasyainterface/check',\n  deleteUrl: 'https://partshub.tk/vasyainterface/workingrows/rows',\n};\n\nexport function makeUrls(location: string): IUrls {\n  if (location === 'local') {\n    return {\n      fetchRowsUrl: 'http://localhost:8000/vasyainterface/workingrows/rows/',\n      fetchRowsDoneUrl:\n        'http://localhost:8000/vasyainterface/workingrows/rowsdone/',\n      angaraUrl:\n        'http://angara77.com/admin33338/dataApi/vasyaInterfaceEndpoint.php?oneCId=',\n      checkProductUrl: 'https://partshub.tk/vasyainterface/check',\n      deleteUrl: 'http://localhost:8000/vasyainterface/workingrows/rows',\n    };\n  }\n  return {\n    fetchRowsUrl: 'https://partshub.tk/vasyainterface/workingrows/rows/',\n    fetchRowsDoneUrl:\n      'https://partshub.tk/vasyainterface/workingrows/rowsdone/',\n    angaraUrl:\n      'http://angara77.com/admin33338/dataApi/vasyaInterfaceEndpoint.php?oneCId=',\n    checkProductUrl: 'https://partshub.tk/vasyainterface/check',\n    deleteUrl: 'https://partshub.tk/vasyainterface/workingrows/rows',\n  };\n}\n\n// Change parameter to 'local' if work with local endpoints\nexport const Urls = makeUrls('remote');\n","function getCookie(name: string) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\nvar CSRF_TOKEN = getCookie('csrftoken');\n\nexport { CSRF_TOKEN };\n","import { CSRF_TOKEN } from './csrfToken';\n\nconst headers = {\n  'content-type': 'application/json',\n  'X-CSRFTOKEN': CSRF_TOKEN,\n};\n\nexport const config = {\n  headers: headers,\n};\n","import { actionTypes } from './types';\nimport { Urls } from '../config';\nimport { IRow } from '../interfaces';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\n\nimport { config } from '../auth/aaxios';\n\nimport { Dispatch } from 'redux';\n\nexport interface IFetchRowsFromServerThunk {\n  type: typeof actionTypes.FETCH_ROWS_IN_WORK;\n  payload: IRow[];\n}\n\nexport interface IAddEmptyRowAction {\n  type: typeof actionTypes.ADD_EMPTY_ROW;\n  payload: IRow;\n}\n\nexport interface IDeleteRowAction {\n  type: typeof actionTypes.DELETE_ROW;\n  payload: string;\n}\n\nexport interface ISetOneCId {\n  type: typeof actionTypes.SET_ONE_C_ID;\n  payload: string;\n  oneCId?: number;\n}\n\nexport interface IMarkDone {\n  type: typeof actionTypes.TOGGLE_DONE;\n  payload: IRow;\n  isDone: boolean;\n}\n\nexport interface IChek {\n  have_photo: boolean;\n  have_video: boolean;\n  have_attribute: boolean;\n  have_description: boolean;\n  have_photo_in_folder: boolean;\n}\n\nexport interface ICheckAllAttributesAction {\n  type: typeof actionTypes.UPDATE_ROWS_ATTRS;\n  payload: IRow[];\n}\n\nexport type MyAction =\n  | IFetchRowsFromServerThunk\n  | IAddEmptyRowAction\n  | IDeleteRowAction\n  | ISetOneCId\n  | IMarkDone;\n\nexport const fetchRowsFromServerThunk = () => {\n  return async (dispatch: Dispatch<any>) => {\n    const res = await axios.get(Urls.fetchRowsUrl);\n\n    dispatch({\n      type: actionTypes.FETCH_ROWS_IN_WORK,\n      payload: res.data,\n    });\n    // here some suspecious pise of code\n    dispatch(checkAllAttributesAction());\n    dispatch(loadingAction(false));\n  };\n};\n\nexport const fetchRowsFromServerReadyThunk = () => {\n  return async (dispatch: Dispatch<any>) => {\n    const res = await axios.get(Urls.fetchRowsDoneUrl);\n\n    dispatch({\n      type: actionTypes.FETCH_ROWS_READY,\n      payload: res.data,\n    });\n    // here some suspecious pise of code\n    dispatch(checkAllAttributesAction(true));\n    dispatch(loadingAction(false));\n  };\n};\n\nexport const addEmptyRow = (row: IRow): IAddEmptyRowAction => {\n  return {\n    type: actionTypes.ADD_EMPTY_ROW,\n    payload: row,\n  };\n};\n\nexport const deleteRow = (id: string): IDeleteRowAction => {\n  return {\n    type: actionTypes.DELETE_ROW,\n    payload: id,\n  };\n};\n\nexport const deleteRowThunk = (uuid: string, id: any) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      await axios.delete(`${Urls.deleteUrl}/${id}/`, config);\n    } catch (e) {\n      console.log(e);\n    }\n\n    dispatch(deleteRow(uuid));\n  };\n};\n\nexport const setOneCIdAction = (oneCId: number, id: string): ISetOneCId => {\n  return {\n    type: actionTypes.SET_ONE_C_ID,\n    payload: id,\n    oneCId,\n  };\n};\n\nexport const toggleDone = (row: IRow, isDone: boolean): IMarkDone => {\n  return {\n    type: actionTypes.TOGGLE_DONE,\n    payload: row,\n    isDone: isDone,\n  };\n};\n\nexport const fillOutRowWithDataThunk = (oneCId: number) => {\n  return async (dispatch: Dispatch) => {\n    //here will be another call of get photos, videos etc\n    //0. Set loading to true\n    //1. fill out from angara77 -- done\n    //2. Save to 76 endpoint -- done\n    //3. Check for photo video etc\n    //4. Set Loading to false\n\n    dispatch(loadingAction(true));\n    const res = await axios.get(`${Urls.angaraUrl}${oneCId}`);\n    const data = await res.data;\n    try {\n    } catch (e) {\n      console.log(e.result.data);\n    }\n\n    let populatedRow: IRow;\n\n    let check: IChek = {\n      have_photo: false,\n      have_video: false,\n      have_description: false,\n      have_attribute: false,\n      have_photo_in_folder: false,\n    };\n\n    const newRow: IRow = {\n      id: data.id,\n      uuid: uuidv4(),\n      oneCId: oneCId,\n      name: data.ang_name,\n      brand: data.brand,\n      catNumber: data.cat,\n      photo: false,\n      video: false,\n      description: '',\n      isDone: false,\n    };\n\n    try {\n      const res = await axios.get(`${Urls.checkProductUrl}/${oneCId}/`);\n      check = res.data;\n    } catch (error) {\n      dispatch(\n        errorMessageAction({\n          Error:\n            'Продукт с таким Один С ID Еще не заведен в итерфейс. Самое время его туда завести!',\n        })\n      );\n      dispatch(toggleSnakbarAction(true));\n      console.log(error.response.data);\n    }\n\n    populatedRow = { ...newRow };\n    const {\n      have_photo,\n      have_video,\n      have_description,\n      have_attribute,\n      have_photo_in_folder,\n    } = check;\n    if (check) {\n      populatedRow.photo = have_photo_in_folder;\n      populatedRow.photoSite = have_photo;\n      populatedRow.video = have_video;\n      populatedRow.descSite = have_description;\n      populatedRow.attibute = have_attribute;\n      populatedRow.linkToSite = `https://angara77.com/porter-0520000611-${oneCId}/`;\n    }\n\n    try {\n      await axios.post(Urls.fetchRowsUrl, newRow, config);\n      dispatch(addEmptyRow(populatedRow));\n    } catch (error) {\n      if (error.response) {\n        let errorMessage: any = null;\n        if (error.response.data.hasOwnProperty('name')) {\n          errorMessage = {\n            error:\n              'Возможно этот товар не выгружается из Один Эски на сайт. Проверь!',\n          };\n        } else {\n          errorMessage = error.response.data;\n        }\n        dispatch(errorMessageAction(errorMessage));\n        dispatch(toggleSnakbarAction(true));\n        console.log(error.response.data);\n      }\n    }\n\n    dispatch(loadingAction(false));\n  };\n};\n\nexport const errorMessageAction = (error: any) => {\n  return {\n    type: actionTypes.SET_ERROR_MESSAGE,\n    payload: error,\n  };\n};\n\nexport const toggleSnakbarAction = (open: boolean = false) => {\n  return {\n    type: actionTypes.TOGGLE_SNACKBAR,\n    payload: open,\n  };\n};\n\n//Checks all rows for photo video etc\n\nexport const checkAllAttributesAction = (ready: boolean = false) => {\n  return async (dispatch: Dispatch, getState: any) => {\n    dispatch(loadingAction(true));\n    const { mainState } = getState();\n    let rows: IRow[];\n    if (ready) {\n      rows = mainState.rowsReady;\n    } else {\n      rows = mainState.rowsInWork;\n    }\n\n    if (rows.length > 0) {\n      let check: IChek = {\n        have_photo: false,\n        have_video: false,\n        have_description: false,\n        have_attribute: false,\n        have_photo_in_folder: false,\n      };\n      const newRows = await Promise.all(\n        rows.map(async (row: IRow) => {\n          try {\n            const res = await axios.get(\n              `${Urls.checkProductUrl}/${row.oneCId}/`\n            );\n            check = res.data;\n          } catch (error) {\n            dispatch(\n              errorMessageAction({\n                Error:\n                  'Продукт с таким Один С ID Еще не заведен в итерфейс. Самое время его туда завести!',\n              })\n            );\n            dispatch(toggleSnakbarAction(true));\n            console.log(error.response.data);\n          }\n\n          const {\n            have_photo,\n            have_video,\n            have_description,\n            have_attribute,\n            have_photo_in_folder,\n          } = check;\n          if (check) {\n            row.photo = have_photo_in_folder;\n            row.photoSite = have_photo;\n            row.video = have_video;\n            row.descSite = have_description;\n            row.attibute = have_attribute;\n            row.linkToSite = `https://angara77.com/porter-0520000611-${row.oneCId}/`;\n          }\n          return row;\n        })\n      );\n      if (ready) {\n        dispatch({\n          type: actionTypes.UPDATE_ROWS_READY_ATTRS,\n          payload: newRows,\n        });\n      } else {\n        dispatch({ type: actionTypes.UPDATE_ROWS_ATTRS, payload: newRows });\n      }\n      dispatch(loadingAction(false));\n    }\n  };\n};\n\n// Loading status toggling\n\nexport const loadingAction = (isLoading: boolean) => {\n  return {\n    type: actionTypes.IS_LOADING,\n    payload: isLoading,\n  };\n};\n\n// save row to server\n\nexport const putRowToServerThunk = (row: IRow) => {\n  return async (dispatch: Dispatch<any>) => {\n    const res = await axios.put(`${Urls.fetchRowsUrl}${row.id}/`, row, config);\n    dispatch({\n      type: actionTypes.PUT_ROW_TO_SERVER,\n      payload: res.data,\n    });\n    dispatch(checkAllAttributesAction());\n  };\n};\n\n// Change description in specific row\n\nexport const changeDescriptionAction = (uuid: string, description: string) => {\n  return {\n    type: actionTypes.CHANGE_DESCRIPTION,\n    payload: uuid,\n    description: description,\n  };\n};\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      '& > * + *': {\n        marginLeft: theme.spacing(2),\n      },\n    },\n  })\n);\n\nexport default function Spiner() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n}\n","import { IRow } from '../interfaces';\n\nimport React, { useState } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useDispatch } from 'react-redux';\nimport {\n  changeDescriptionAction,\n  deleteRowThunk,\n  putRowToServerThunk,\n  toggleDone,\n} from '../store/actions';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core';\n\nconst greenColor = green[700];\nconst greyColor = grey[300];\nconst redColor = red[700];\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    muttedText: {\n      color: greyColor,\n      textDecoration: 'line-trought',\n    },\n    greenText: {\n      color: greenColor,\n    },\n    redText: {\n      color: redColor,\n    },\n  })\n);\n\ninterface IProps {\n  myRow: IRow;\n  ready?: boolean;\n}\nexport default function TableRowComponent({ myRow, ready }: IProps) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [desc, setDesc] = useState(myRow.description);\n  const [checked, setChecked] = React.useState(myRow.isDone || false);\n\n  const handleDesc = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setDesc(event.target.value);\n    dispatch(changeDescriptionAction(myRow.uuid, desc));\n  };\n  const handleSaveDescToServer = () => {\n    dispatch(putRowToServerThunk(myRow));\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked(event.target.checked);\n    dispatch(toggleDone(myRow, event.target.checked));\n\n    dispatch(putRowToServerThunk(myRow));\n  };\n\n  const handleDelete = (uuid: string, id: any): void => {\n    // needs to add confirm\n    const conf = window.confirm('Are You Shure?');\n    if (conf) {\n      dispatch(deleteRowThunk(uuid, id));\n    } else {\n      return;\n    }\n  };\n  const customColumnStyle = { minWidth: '200px' };\n  const checkbox = (\n    <Checkbox\n      checked={checked}\n      onChange={handleChange}\n      color=\"primary\"\n      inputProps={{ 'aria-label': 'secondary checkbox' }}\n    />\n  );\n  return (\n    <React.Fragment>\n      <TableRow>\n        <TableCell className={myRow.isDone ? classes.muttedText : ''}>\n          {!ready && checkbox}\n        </TableCell>\n        <TableCell className={myRow.isDone ? classes.muttedText : ''}>\n          {myRow.oneCId}\n        </TableCell>\n        <TableCell\n          className={myRow.isDone ? classes.muttedText : ''}\n          component=\"th\"\n          scope=\"row\"\n        >\n          {myRow.name}\n        </TableCell>\n        <TableCell\n          className={myRow.isDone ? classes.muttedText : ''}\n          align=\"right\"\n        >\n          {myRow.brand}\n        </TableCell>\n        <TableCell\n          className={myRow.isDone ? classes.muttedText : ''}\n          align=\"right\"\n        >\n          {myRow.catNumber}\n        </TableCell>\n        <TableCell\n          className={myRow.isDone ? classes.muttedText : ''}\n          align=\"right\"\n        >\n          {myRow.photo ? (\n            <CheckIcon\n              className={myRow.isDone ? classes.muttedText : classes.greenText}\n            />\n          ) : (\n            <ClearIcon\n              className={myRow.isDone ? classes.muttedText : classes.redText}\n            />\n          )}\n        </TableCell>\n        <TableCell\n          className={myRow.isDone ? classes.muttedText : ''}\n          align=\"right\"\n        >\n          {myRow.photoSite ? (\n            <CheckIcon\n              className={myRow.isDone ? classes.muttedText : classes.greenText}\n            />\n          ) : (\n            <ClearIcon\n              className={myRow.isDone ? classes.muttedText : classes.redText}\n            />\n          )}\n        </TableCell>\n        <TableCell align=\"right\">\n          {myRow.video ? (\n            <CheckIcon\n              className={myRow.isDone ? classes.muttedText : classes.greenText}\n            />\n          ) : (\n            <ClearIcon\n              className={myRow.isDone ? classes.muttedText : classes.redText}\n            />\n          )}\n        </TableCell>\n        <TableCell align=\"right\">\n          {myRow.attibute ? (\n            <CheckIcon\n              className={myRow.isDone ? classes.muttedText : classes.greenText}\n            />\n          ) : (\n            <ClearIcon\n              className={myRow.isDone ? classes.muttedText : classes.redText}\n            />\n          )}\n        </TableCell>\n        <TableCell style={customColumnStyle} align=\"right\">\n          {ready ? (\n            myRow.description\n          ) : (\n            <TextField\n              id=\"standard-basic\"\n              label=\"Заметки\"\n              multiline\n              onChange={handleDesc}\n              onBlur={handleSaveDescToServer}\n              value={desc}\n            />\n          )}\n        </TableCell>\n        <TableCell align=\"right\">\n          <a\n            className={myRow.isDone ? classes.muttedText : ''}\n            href={myRow.linkToSite}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <LinkIcon color=\"primary\" />\n          </a>\n        </TableCell>\n        <TableCell>\n          <DeleteOutlinedIcon\n            className={myRow.isDone ? classes.muttedText : ''}\n            onClick={() => handleDelete(myRow.uuid, myRow.id)}\n            color=\"secondary\"\n          />\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n","import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableRowComponent from './TableRow';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport { IRow } from '../interfaces';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      minWidth: 650,\n    },\n    topRowNumber: {\n      padding: theme.spacing(2),\n    },\n  })\n);\n\ninterface IProps {\n  rowsInWork: IRow[];\n  ready?: boolean;\n}\n\nexport default function TableComponent({ rowsInWork, ready }: IProps) {\n  const classes = useStyles();\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Done</TableCell>\n            <TableCell>OneCId</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Brand</TableCell>\n            <TableCell align=\"right\">Cat</TableCell>\n            <TableCell align=\"right\">Photo Fold</TableCell>\n            <TableCell align=\"right\">Photo Site</TableCell>\n            <TableCell align=\"right\">Video</TableCell>\n            <TableCell align=\"right\">Attr</TableCell>\n            <TableCell align=\"right\">Notes</TableCell>\n            <TableCell align=\"right\">To Site</TableCell>\n            <TableCell align=\"right\">Del</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rowsInWork.map((row: IRow) => (\n            <TableRowComponent key={row.uuid} myRow={row} ready={ready} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IRow } from '../interfaces';\nimport { Button, Grid } from '@material-ui/core';\nimport {\n  toggleSnakbarAction,\n  fetchRowsFromServerThunk,\n  fillOutRowWithDataThunk,\n  checkAllAttributesAction,\n} from '../store/actions';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport { Typography } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { IState } from '../store/reducers';\n\nimport Spiner from './Spiner';\nimport TableComponent from './Table';\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function TestPage() {\n  const dispatch = useDispatch();\n  const error = useSelector((state: any) => {\n    return state.mainState.errorMessage;\n  });\n  const { openSnakbar } = useSelector((state: any) => state.mainState);\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    dispatch(toggleSnakbarAction(false));\n  };\n\n  const [oneCId, setOneCId] = useState<number>(0);\n\n  useEffect(() => {\n    dispatch(fetchRowsFromServerThunk());\n  }, [dispatch]);\n\n  const rowsInWork: IRow[] = useSelector((state: any) => {\n    return state.mainState.rowsInWork;\n  });\n\n  const handleChangeOneC = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(event.target.value);\n    const newValue = isNaN(value) ? 0 : value;\n    setOneCId(newValue);\n  };\n\n  const handleAddNewRowEnter = (\n    event: React.KeyboardEvent<HTMLInputElement>\n  ) => {\n    if (event.key === 'Enter') {\n      dispatch(fillOutRowWithDataThunk(oneCId));\n      // setOneCId(0);\n    }\n  };\n\n  const handleAddNewRow = () => {\n    dispatch(fillOutRowWithDataThunk(oneCId));\n\n    // checking All updates for photo, video , etc..\n    dispatch(checkAllAttributesAction());\n    setOneCId(0);\n  };\n  const handleUpdateInfo = () => {\n    dispatch(checkAllAttributesAction());\n  };\n\n  let errorArr = [];\n  for (const key in error) {\n    errorArr.push(JSON.stringify({ [key]: error[key] }));\n  }\n\n  const isLoading = useSelector((state: IState) => {\n    return state.mainState.isLoading;\n  });\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={2}>\n          <TextField\n            label=\"1C ID\"\n            variant=\"outlined\"\n            value={oneCId}\n            onChange={handleChangeOneC}\n            size=\"small\"\n            fullWidth\n            onKeyDown={handleAddNewRowEnter}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <Fab\n            type=\"submit\"\n            onClick={handleAddNewRow}\n            color=\"primary\"\n            size=\"small\"\n            aria-label=\"add\"\n          >\n            <AddIcon />\n          </Fab>\n        </Grid>\n        <Grid item xs={2}>\n          <Typography variant=\"h6\">One C ID: {oneCId}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          {isLoading ? (\n            <Spiner />\n          ) : (\n            <Button\n              onClick={handleUpdateInfo}\n              variant=\"outlined\"\n              color=\"primary\"\n            >\n              UPDATE INFO\n            </Button>\n          )}\n        </Grid>\n        <Grid item xs={12}>\n          <TableComponent rowsInWork={rowsInWork} />\n        </Grid>\n      </Grid>\n\n      <Snackbar\n        open={openSnakbar}\n        autoHideDuration={16000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {errorArr.map((str: string, i: number) => (\n            <div key={i}>{str}</div>\n          ))}\n        </Alert>\n      </Snackbar>\n    </React.Fragment>\n  );\n}\n\n// Need to make alert working later on\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IRow } from '../interfaces';\nimport { Grid } from '@material-ui/core';\nimport { Theme, createStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport TableComponent from './Table';\nimport { fetchRowsFromServerReadyThunk } from '../store/actions';\nimport { IState } from '../store/reducers';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      minWidth: 650,\n    },\n    topRowNumber: {\n      padding: theme.spacing(2),\n    },\n  })\n);\n\nexport default function ReadyPage() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchRowsFromServerReadyThunk());\n  }, [dispatch]);\n\n  const rowsReady: IRow[] = useSelector((state: IState) => {\n    return state.mainState.rowsReady;\n  });\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={2}>\n          <Typography variant=\"h6\">Some text</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <TableComponent rowsInWork={rowsReady} ready={true} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport './App.scss';\nimport AppBar from './components/AppBar';\nimport MainTable from './components/MainTable';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ReadyPage from './components/ReadyPage';\nimport Box from '@material-ui/core/Box';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={'/react/'}>\n      <div>\n        <AppBar />\n        <Box className=\"containerBox\">\n          <Switch>\n            <Route path=\"/testpage/\" component={ReadyPage} />\n            <Route path=\"/\" component={MainTable} />\n          </Switch>\n        </Box>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { IRow } from '../interfaces';\nimport { MyAction } from './actions';\n\nimport { actionTypes } from './types';\n\nexport interface IMainState {\n  rowsInWork: IRow[];\n  rowsReady: IRow[];\n  errorMessage: any;\n  openSnakbar: boolean;\n  isLoading: boolean;\n}\nexport interface IState {\n  mainState: IMainState;\n}\n\nconst initState: IMainState = {\n  rowsInWork: [],\n  rowsReady: [],\n  errorMessage: null,\n  openSnakbar: false,\n  isLoading: false,\n};\n\nconst mainReducer = (state: IMainState = initState, action: MyAction | any) => {\n  switch (action.type) {\n    case actionTypes.FETCH_ROWS_IN_WORK:\n      return { ...state, rowsInWork: action.payload };\n    case actionTypes.FETCH_ROWS_READY:\n      return { ...state, rowsReady: action.payload };\n    case actionTypes.ADD_EMPTY_ROW:\n      return { ...state, rowsInWork: [...state.rowsInWork, action.payload] };\n    case actionTypes.DELETE_ROW:\n      return {\n        ...state,\n        rowsInWork: state.rowsInWork.filter(\n          (row: IRow) => row.uuid !== action.payload\n        ),\n      };\n    case actionTypes.SET_ONE_C_ID:\n      const index = state.rowsInWork.findIndex(\n        (row: IRow) => row.uuid === action.payload\n      );\n      state.rowsInWork[index].oneCId = action.oneCId;\n\n      return {\n        ...state,\n        rowsInWork: [...state.rowsInWork],\n      };\n    case actionTypes.TOGGLE_DONE:\n      const idx = state.rowsInWork.findIndex(\n        (row: IRow) => row.uuid === action.payload.uuid\n      );\n      state.rowsInWork[idx].isDone = action.isDone;\n      return { ...state, rowsInWork: [...state.rowsInWork] };\n    case actionTypes.FETCH_DATA_A77:\n      return { ...state };\n    case actionTypes.SET_ERROR_MESSAGE:\n      return { ...state, errorMessage: action.payload };\n    case actionTypes.TOGGLE_SNACKBAR:\n      return { ...state, openSnakbar: action.payload };\n    case actionTypes.UPDATE_ROWS_ATTRS:\n      return { ...state, rowsInWork: action.payload };\n    case actionTypes.UPDATE_ROWS_READY_ATTRS:\n      return { ...state, rowsReady: action.payload };\n    case actionTypes.IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    case actionTypes.CHANGE_DESCRIPTION:\n      const descRow = state.rowsInWork.findIndex(\n        (row: IRow) => row.uuid === action.payload\n      );\n      state.rowsInWork[descRow].description = action.description;\n      return {\n        ...state,\n        rowsInWork: [...state.rowsInWork],\n      };\n    case actionTypes.PUT_ROW_TO_SERVER:\n      const changeRow = state.rowsInWork.findIndex(\n        (row: IRow) => row.uuid === action.payload.uuid\n      );\n      state.rowsInWork[changeRow] = action.payload;\n      return {\n        ...state,\n        rowsInWork: [...state.rowsInWork],\n      };\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  mainState: mainReducer,\n});\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk, { ThunkMiddleware } from 'redux-thunk';\n\nimport { IState, rootReducer } from './reducers';\n\nexport default createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk as ThunkMiddleware<IState, any>))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}