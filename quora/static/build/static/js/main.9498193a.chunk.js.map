{"version":3,"sources":["components/AppBar.tsx","store/types.ts","config.ts","auth/csrfToken.ts","auth/aaxios.ts","store/actions.ts","components/Spiner.tsx","components/TableRow.tsx","components/Table.tsx","components/MainTable.tsx","components/ReadyPage.tsx","components/CheckPhotoTable.tsx","components/CheckPhotos.tsx","App.tsx","reportWebVitals.ts","store/reducers.ts","store/index.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","to","process","Button","actionTypes","Urls","fetchRowsUrl","fetchRowsDoneUrl","angaraUrl","checkProductUrl","deleteUrl","noPhotosList","photoFolder","config","headers","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","deleteRow","id","type","DELETE_ROW","payload","fillOutRowWithDataThunk","oneCId","dispatch","a","loadingAction","axios","get","res","data","check","have_photo","have_video","have_description","have_attribute","have_photo_in_folder","newRow","uuid","uuidv4","ang_name","brand","catNumber","cat","photo","video","description","isDone","videoUrl","errorMessageAction","Error","toggleSnakbarAction","console","log","response","populatedRow","photoSite","descSite","attibute","linkToSite","post","row","ADD_EMPTY_ROW","errorMessage","hasOwnProperty","error","SET_ERROR_MESSAGE","open","TOGGLE_SNACKBAR","checkAllAttributesAction","ready","getState","mainState","rows","rowsReady","rowsInWork","Promise","all","map","newRows","UPDATE_ROWS_READY_ATTRS","UPDATE_ROWS_ATTRS","isLoading","IS_LOADING","putRowToServerThunk","put","PUT_ROW_TO_SERVER","display","marginLeft","Spiner","CircularProgress","greenColor","green","greyColor","grey","redColor","red","muttedText","textDecoration","greenText","redText","TableRowComponent","myRow","useDispatch","useState","desc","setDesc","setVideoUrl","React","checked","setChecked","handleDelete","window","confirm","delete","deleteRowThunk","customColumnStyle","minWidth","checkbox","Checkbox","onChange","event","target","TOGGLE_DONE","inputProps","Fragment","TableRow","TableCell","dateCreated","component","scope","align","style","TextField","label","multiline","value","CHANGE_VIDEO_URL","changeVideoUrlAction","onBlur","CHANGE_DESCRIPTION","href","rel","onClick","table","topRowNumber","padding","cursorPointer","cursor","TableComponent","handleSorting","handleSortingDataCreated","TableContainer","Paper","Table","TableHead","TableBody","Alert","props","elevation","TestPage","useSelector","state","openSnakbar","handleClose","reason","setOneCId","useEffect","FETCH_ROWS_IN_WORK","errorArr","key","push","JSON","stringify","Grid","container","item","xs","md","parseInt","newValue","isNaN","size","fullWidth","onKeyDown","Fab","Hidden","mdDown","ORDER_ROWS","ORDER_ROWS_BY_DATE_CREATED","Snackbar","autoHideDuration","onClose","severity","str","ReadyPage","FETCH_ROWS_READY","groupedRows","groupBy","dateChanged","day","dayGroup","keyName","Object","keys","BasicTable","one_c_id","cat_number","CheckPhotos","loading","setLoading","photos","setPhotos","getNoPhotoList","resFold","folders","fld","result","includes","toString","App","basename","Box","exact","path","MainTable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","rootReducer","combineReducers","action","filter","SET_ONE_C_ID","index","findIndex","idx","FETCH_DATA_A77","descRow","videoRow","changeRow","orderBy","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.9498193a.chunk.js","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link to={`${process.env.PUBLIC_URL}/`}>Home</Link>\n          </Typography>\n          <Link to={`${process.env.PUBLIC_URL}/checkphotos/`}>\n            <Button color=\"inherit\">CHECK PHOTOS</Button>\n          </Link>\n          <Link to={`${process.env.PUBLIC_URL}/testpage/`}>\n            <Button color=\"inherit\">READY ROWS</Button>\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","export enum actionTypes {\n  FETCH_ROWS_IN_WORK = 'FETCH_ROWS_IN_WORK',\n  FETCH_ROWS_READY = 'FETCH_ROWS_READY',\n  ADD_EMPTY_ROW = 'ADD_EMPTY_ROW',\n  DELETE_ROW = 'DELETE_ROW',\n  MARK_ROW_READY = 'MARK_ROW_READY',\n  MARK_ROW_UNREADY = 'MARK_ROW_UNREADY',\n  SAVE_ROW_TO_SERVER = 'SAVE_ROW_TO_SERVER',\n  SET_ONE_C_ID = 'SET_ONE_C_ID',\n  TOGGLE_DONE = 'TOGGLE_DONE',\n  FETCH_DATA_A77 = 'FETCH_DATA_A77',\n  SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE',\n  TOGGLE_SNACKBAR = 'TOGGLE_SNACKBAR',\n  IS_LOADING = 'IS_LOADING',\n  UPDATE_ROWS_ATTRS = 'UPDATE_ROWS_ATTRS',\n  SAVE_DESCRIPTION_TO_SERVER = 'SAVE_DESCRIPTION_TO_SERVER',\n  CHANGE_DESCRIPTION = 'CHANGE_DESCRIPTION',\n  PUT_ROW_TO_SERVER = 'PUT_ROW_TO_SERVER',\n  UPDATE_ROWS_READY_ATTRS = 'UPDATE_ROWS_READY_ATTRS',\n  ORDER_ROWS = 'ORDER_ROWS',\n  CHANGE_VIDEO_URL = 'CHANGE_VIDEO_URL',\n  ORDER_ROWS_BY_DATE_CREATED = 'ORDER_ROWS_BY_DATE_CREATED',\n}\n","interface IUrls {\n  fetchRowsUrl: string;\n  angaraUrl: string;\n  checkProductUrl: string;\n  deleteUrl: string;\n  fetchRowsDoneUrl: string;\n  noPhotosList: string;\n  photoFolder: string;\n}\n\nexport function makeUrls(location: string): IUrls {\n  if (location === 'local') {\n    return {\n      fetchRowsUrl: 'http://localhost:8000/vasyainterface/workingrows/rows/',\n      fetchRowsDoneUrl:\n        'http://localhost:8000/vasyainterface/workingrows/rowsdone/',\n      angaraUrl:\n        'http://angara77.com/admin33338/dataApi/vasyaInterfaceEndpoint.php?oneCId=',\n      checkProductUrl: 'https://partshub.tk/vasyainterface/check',\n      deleteUrl: 'http://localhost:8000/vasyainterface/workingrows/rows',\n      noPhotosList: 'http://localhost:8000/vasyainterface/nophoto/',\n      photoFolder: 'http://localhost:8000/vasyainterface/checkfolders/',\n    };\n  }\n  return {\n    fetchRowsUrl: 'https://partshub.tk/vasyainterface/workingrows/rows/',\n    fetchRowsDoneUrl:\n      'https://partshub.tk/vasyainterface/workingrows/rowsdone/',\n    angaraUrl:\n      'http://angara77.com/admin33338/dataApi/vasyaInterfaceEndpoint.php?oneCId=',\n    checkProductUrl: 'https://partshub.tk/vasyainterface/check',\n    deleteUrl: 'https://partshub.tk/vasyainterface/workingrows/rows',\n    noPhotosList: 'https://partshub.tk/vasyainterface/nophoto/',\n    photoFolder: 'http://localhost:8000/vasyainterface/checkfolders/',\n  };\n}\n\n// Change parameter to 'local' if work with local endpoints\nexport const Urls = makeUrls('remote');\n","function getCookie(name: string) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\nvar CSRF_TOKEN = getCookie('csrftoken');\n\nexport { CSRF_TOKEN };\n","import { CSRF_TOKEN } from './csrfToken';\n\nconst headers = {\n  'content-type': 'application/json',\n  'X-CSRFTOKEN': CSRF_TOKEN,\n};\n\nexport const config = {\n  headers: headers,\n};\n","import { actionTypes } from './types';\nimport { Urls } from '../config';\nimport { IRow } from '../interfaces';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\n\nimport { config } from '../auth/aaxios';\n\nimport { Dispatch } from 'redux';\n\nexport interface IFetchRowsFromServerThunk {\n  type: typeof actionTypes.FETCH_ROWS_IN_WORK;\n  payload: IRow[];\n}\n\nexport interface IAddEmptyRowAction {\n  type: typeof actionTypes.ADD_EMPTY_ROW;\n  payload: IRow;\n}\n\nexport interface IDeleteRowAction {\n  type: typeof actionTypes.DELETE_ROW;\n  payload: string;\n}\n\nexport interface ISetOneCId {\n  type: typeof actionTypes.SET_ONE_C_ID;\n  payload: string;\n  oneCId?: number;\n}\n\nexport interface IMarkDone {\n  type: typeof actionTypes.TOGGLE_DONE;\n  payload: IRow;\n  isDone: boolean;\n}\n\nexport interface IChek {\n  have_photo: boolean;\n  have_video: boolean;\n  have_attribute: boolean;\n  have_description: boolean;\n  have_photo_in_folder: boolean;\n}\n\nexport interface ICheckAllAttributesAction {\n  type: typeof actionTypes.UPDATE_ROWS_ATTRS;\n  payload: IRow[];\n}\n\nexport type MyAction =\n  | IFetchRowsFromServerThunk\n  | IAddEmptyRowAction\n  | IDeleteRowAction\n  | ISetOneCId\n  | IMarkDone;\n\nexport const orderItemsAction = () => {\n  return {\n    type: actionTypes.ORDER_ROWS,\n  };\n};\nexport const orderItemsByDateCreateAction = () => {\n  return {\n    type: actionTypes.ORDER_ROWS_BY_DATE_CREATED,\n  };\n};\n\nexport const fetchRowsFromServerThunk = () => {\n  return async (dispatch: Dispatch<any>) => {\n    const res = await axios.get(Urls.fetchRowsUrl);\n\n    dispatch({\n      type: actionTypes.FETCH_ROWS_IN_WORK,\n      payload: res.data,\n    });\n    // here some suspecious pise of code\n    dispatch(checkAllAttributesAction());\n    dispatch(loadingAction(false));\n  };\n};\n\nexport const fetchRowsFromServerReadyThunk = () => {\n  return async (dispatch: Dispatch<any>) => {\n    const res = await axios.get(Urls.fetchRowsDoneUrl);\n\n    dispatch({\n      type: actionTypes.FETCH_ROWS_READY,\n      payload: res.data,\n    });\n    // here some suspecious pise of code\n    dispatch(checkAllAttributesAction(true));\n    dispatch(loadingAction(false));\n  };\n};\n\nexport const addEmptyRow = (row: IRow): IAddEmptyRowAction => {\n  return {\n    type: actionTypes.ADD_EMPTY_ROW,\n    payload: row,\n  };\n};\n\nexport const deleteRow = (id: string): IDeleteRowAction => {\n  return {\n    type: actionTypes.DELETE_ROW,\n    payload: id,\n  };\n};\n\nexport const deleteRowThunk = (uuid: string, id: any) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      await axios.delete(`${Urls.deleteUrl}/${id}/`, config);\n    } catch (e) {\n      console.log(e);\n    }\n\n    dispatch(deleteRow(uuid));\n  };\n};\n\nexport const setOneCIdAction = (oneCId: number, id: string): ISetOneCId => {\n  return {\n    type: actionTypes.SET_ONE_C_ID,\n    payload: id,\n    oneCId,\n  };\n};\n\nexport const toggleDone = (row: IRow, isDone: boolean): IMarkDone => {\n  return {\n    type: actionTypes.TOGGLE_DONE,\n    payload: row,\n    isDone: isDone,\n  };\n};\n\nexport const fillOutRowWithDataThunk = (oneCId: number) => {\n  return async (dispatch: Dispatch) => {\n    //here will be another call of get photos, videos etc\n    //0. Set loading to true\n    //1. fill out from angara77 -- done\n    //2. Save to 76 endpoint -- done\n    //3. Check for photo video etc\n    //4. Set Loading to false\n\n    dispatch(loadingAction(true));\n    const res = await axios.get(`${Urls.angaraUrl}${oneCId}`);\n    const data = await res.data;\n    try {\n    } catch (e) {\n      console.log(e.result.data);\n    }\n\n    let populatedRow: IRow;\n\n    let check: IChek = {\n      have_photo: false,\n      have_video: false,\n      have_description: false,\n      have_attribute: false,\n      have_photo_in_folder: false,\n    };\n\n    const newRow: IRow = {\n      id: data.id,\n      uuid: uuidv4(),\n      oneCId: oneCId,\n      name: data.ang_name,\n      brand: data.brand,\n      catNumber: data.cat,\n      photo: false,\n      video: false,\n      description: '',\n      isDone: false,\n      videoUrl: '',\n    };\n\n    try {\n      const res = await axios.get(`${Urls.checkProductUrl}/${oneCId}/`);\n      check = res.data;\n    } catch (error) {\n      dispatch(\n        errorMessageAction({\n          Error:\n            'Продукт с таким Один С ID Еще не заведен в итерфейс. Самое время его туда завести!',\n        })\n      );\n      dispatch(toggleSnakbarAction(true));\n      console.log(error.response.data);\n    }\n\n    populatedRow = { ...newRow };\n    const {\n      have_photo,\n      have_video,\n      have_description,\n      have_attribute,\n      have_photo_in_folder,\n    } = check;\n    if (check) {\n      populatedRow.photo = have_photo_in_folder;\n      populatedRow.photoSite = have_photo;\n      populatedRow.video = have_video;\n      populatedRow.descSite = have_description;\n      populatedRow.attibute = have_attribute;\n      populatedRow.linkToSite = `https://angara77.com/porter-0520000611-${oneCId}/`;\n    }\n\n    try {\n      await axios.post(Urls.fetchRowsUrl, newRow, config);\n      dispatch(addEmptyRow(populatedRow));\n    } catch (error) {\n      if (error.response) {\n        let errorMessage: any = null;\n        if (error.response.data.hasOwnProperty('name')) {\n          errorMessage = {\n            error:\n              'Возможно этот товар не выгружается из Один Эски на сайт. Проверь!',\n          };\n        } else {\n          errorMessage = error.response.data;\n        }\n        dispatch(errorMessageAction(errorMessage));\n        dispatch(toggleSnakbarAction(true));\n        console.log(error.response.data);\n      }\n    }\n\n    dispatch(loadingAction(false));\n  };\n};\n\nexport const errorMessageAction = (error: any) => {\n  return {\n    type: actionTypes.SET_ERROR_MESSAGE,\n    payload: error,\n  };\n};\n\nexport const toggleSnakbarAction = (open: boolean = false) => {\n  return {\n    type: actionTypes.TOGGLE_SNACKBAR,\n    payload: open,\n  };\n};\n\n//Checks all rows for photo video etc\n\nexport const checkAllAttributesAction = (ready: boolean = false) => {\n  return async (dispatch: Dispatch, getState: any) => {\n    dispatch(loadingAction(true));\n    const { mainState } = getState();\n    let rows: IRow[];\n    if (ready) {\n      rows = mainState.rowsReady;\n    } else {\n      rows = mainState.rowsInWork;\n    }\n\n    if (rows.length > 0) {\n      let check: IChek = {\n        have_photo: false,\n        have_video: false,\n        have_description: false,\n        have_attribute: false,\n        have_photo_in_folder: false,\n      };\n      const newRows = await Promise.all(\n        rows.map(async (row: IRow) => {\n          try {\n            const res = await axios.get(\n              `${Urls.checkProductUrl}/${row.oneCId}/`\n            );\n            check = res.data;\n          } catch (error) {\n            dispatch(\n              errorMessageAction({\n                Error:\n                  'Продукт с таким Один С ID Еще не заведен в итерфейс. Самое время его туда завести!',\n              })\n            );\n            dispatch(toggleSnakbarAction(true));\n            console.log(error.response.data);\n          }\n\n          const {\n            have_photo,\n            have_video,\n            have_description,\n            have_attribute,\n            have_photo_in_folder,\n          } = check;\n          if (check) {\n            row.photo = have_photo_in_folder;\n            row.photoSite = have_photo;\n            row.video = have_video;\n            row.descSite = have_description;\n            row.attibute = have_attribute;\n            row.linkToSite = `https://angara77.com/porter-0520000611-${row.oneCId}/`;\n          }\n          return row;\n        })\n      );\n      if (ready) {\n        dispatch({\n          type: actionTypes.UPDATE_ROWS_READY_ATTRS,\n          payload: newRows,\n        });\n      } else {\n        dispatch({ type: actionTypes.UPDATE_ROWS_ATTRS, payload: newRows });\n      }\n      //dispatch(orderItemsAction());\n      dispatch(loadingAction(false));\n    }\n  };\n};\n\n// Loading status toggling\n\nexport const loadingAction = (isLoading: boolean) => {\n  return {\n    type: actionTypes.IS_LOADING,\n    payload: isLoading,\n  };\n};\n\n// save row to server\n\nexport const putRowToServerThunk = (row: IRow) => {\n  return async (dispatch: Dispatch<any>) => {\n    const res = await axios.put(`${Urls.fetchRowsUrl}${row.id}/`, row, config);\n    dispatch({\n      type: actionTypes.PUT_ROW_TO_SERVER,\n      payload: res.data,\n    });\n    dispatch(checkAllAttributesAction());\n  };\n};\n\n// Change description in specific row\n\nexport const changeDescriptionAction = (uuid: string, description: string) => {\n  return {\n    type: actionTypes.CHANGE_DESCRIPTION,\n    payload: uuid,\n    description: description,\n  };\n};\n\nexport const changeVideoUrlAction = (uuid: string, videoUrl: string) => {\n  console.log(uuid, videoUrl, 'in action');\n  return {\n    type: actionTypes.CHANGE_VIDEO_URL,\n    payload: uuid,\n    videoUrl: videoUrl,\n  };\n};\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      '& > * + *': {\n        marginLeft: theme.spacing(2),\n      },\n    },\n  })\n);\n\nexport default function Spiner() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n}\n","import { IRow } from '../interfaces';\n\nimport React, { useState } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useDispatch } from 'react-redux';\nimport {\n  changeDescriptionAction,\n  deleteRowThunk,\n  putRowToServerThunk,\n  toggleDone,\n  changeVideoUrlAction,\n} from '../store/actions';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core';\n\nconst greenColor = green[700];\nconst greyColor = grey[300];\nconst redColor = red[700];\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    muttedText: {\n      color: greyColor,\n      textDecoration: 'line-trought',\n    },\n    greenText: {\n      color: greenColor,\n    },\n    redText: {\n      color: redColor,\n    },\n  })\n);\n\ninterface IProps {\n  myRow: IRow;\n  ready?: boolean;\n}\nexport default function TableRowComponent({ myRow, ready }: IProps) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [desc, setDesc] = useState(myRow.description);\n  const [videoUrl, setVideoUrl] = useState(myRow.videoUrl);\n  const [checked, setChecked] = React.useState(myRow.isDone || false);\n\n  const handleDesc = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setDesc(event.target.value);\n    dispatch(changeDescriptionAction(myRow.uuid, desc));\n  };\n  const handleSaveDescToServer = () => {\n    dispatch(putRowToServerThunk(myRow));\n  };\n\n  const handleSaveVideoUrlToServer = () => {\n    dispatch(putRowToServerThunk(myRow));\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked(event.target.checked);\n    dispatch(toggleDone(myRow, event.target.checked));\n\n    dispatch(putRowToServerThunk(myRow));\n  };\n\n  const handleVideoUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setVideoUrl(event.target.value);\n    dispatch(changeVideoUrlAction(myRow.uuid, event.target.value));\n  };\n\n  const handleDelete = (uuid: string, id: any): void => {\n    // needs to add confirm\n    const conf = window.confirm('Are You Shure?');\n    if (conf) {\n      dispatch(deleteRowThunk(uuid, id));\n    } else {\n      return;\n    }\n  };\n  const customColumnStyle = { minWidth: '200px' };\n  const checkbox = (\n    <Checkbox\n      checked={checked}\n      onChange={handleChange}\n      color=\"primary\"\n      inputProps={{ 'aria-label': 'secondary checkbox' }}\n    />\n  );\n  return (\n    <React.Fragment>\n      <TableRow>\n        <TableCell className={myRow.isDone ? classes.muttedText : ''}>\n          {!ready && checkbox}\n        </TableCell>\n        <TableCell className={myRow.isDone ? classes.muttedText : ''}>\n          {myRow.oneCId}\n        </TableCell>\n        <TableCell className={myRow.isDone ? classes.muttedText : ''}>\n          {myRow.dateCreated}\n        </TableCell>\n        <TableCell\n          className={myRow.isDone ? classes.muttedText : ''}\n          component=\"th\"\n          scope=\"row\"\n        >\n          {myRow.name}\n        </TableCell>\n        <TableCell\n          className={myRow.isDone ? classes.muttedText : ''}\n          align=\"right\"\n        >\n          {myRow.brand}\n        </TableCell>\n        <TableCell\n          className={myRow.isDone ? classes.muttedText : ''}\n          align=\"right\"\n        >\n          {myRow.catNumber}\n        </TableCell>\n        <TableCell\n          className={myRow.isDone ? classes.muttedText : ''}\n          align=\"right\"\n        >\n          {myRow.photo ? (\n            <CheckIcon\n              className={myRow.isDone ? classes.muttedText : classes.greenText}\n            />\n          ) : (\n            <ClearIcon\n              className={myRow.isDone ? classes.muttedText : classes.redText}\n            />\n          )}\n        </TableCell>\n        <TableCell\n          className={myRow.isDone ? classes.muttedText : ''}\n          align=\"right\"\n        >\n          {myRow.photoSite ? (\n            <CheckIcon\n              className={myRow.isDone ? classes.muttedText : classes.greenText}\n            />\n          ) : (\n            <ClearIcon\n              className={myRow.isDone ? classes.muttedText : classes.redText}\n            />\n          )}\n        </TableCell>\n        <TableCell align=\"right\">\n          {myRow.video ? (\n            <CheckIcon\n              className={myRow.isDone ? classes.muttedText : classes.greenText}\n            />\n          ) : (\n            <ClearIcon\n              className={myRow.isDone ? classes.muttedText : classes.redText}\n            />\n          )}\n        </TableCell>\n        <TableCell align=\"right\">\n          {myRow.attibute ? (\n            <CheckIcon\n              className={myRow.isDone ? classes.muttedText : classes.greenText}\n            />\n          ) : (\n            <ClearIcon\n              className={myRow.isDone ? classes.muttedText : classes.redText}\n            />\n          )}\n        </TableCell>\n        <TableCell style={customColumnStyle} align=\"right\">\n          {ready ? (\n            myRow.videoUrl\n          ) : (\n            <TextField\n              id=\"standard-videoUrl\"\n              label=\"Youtube Url\"\n              multiline\n              onChange={handleVideoUrl}\n              onBlur={handleSaveVideoUrlToServer}\n              value={videoUrl}\n            />\n          )}\n        </TableCell>\n        <TableCell style={customColumnStyle} align=\"right\">\n          {ready ? (\n            myRow.description\n          ) : (\n            <TextField\n              id=\"standard-basic\"\n              label=\"Заметки\"\n              multiline\n              onChange={handleDesc}\n              onBlur={handleSaveDescToServer}\n              value={desc}\n            />\n          )}\n        </TableCell>\n        <TableCell align=\"right\">\n          <a\n            className={myRow.isDone ? classes.muttedText : ''}\n            href={myRow.linkToSite}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <LinkIcon color=\"primary\" />\n          </a>\n        </TableCell>\n        <TableCell>\n          {!ready && (\n            <DeleteOutlinedIcon\n              className={myRow.isDone ? classes.muttedText : ''}\n              onClick={() => handleDelete(myRow.uuid, myRow.id)}\n              color=\"secondary\"\n            />\n          )}\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n","import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableRowComponent from './TableRow';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport { IRow } from '../interfaces';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      minWidth: 650,\n    },\n    topRowNumber: {\n      padding: theme.spacing(2),\n    },\n    cursorPointer: {\n      cursor: 'pointer',\n    },\n  })\n);\n\ninterface IProps {\n  rowsInWork: IRow[];\n  ready?: boolean;\n  handleSorting?(): void;\n  handleSortingDataCreated?(): void;\n}\n\nexport default function TableComponent({\n  rowsInWork,\n  ready,\n  handleSorting,\n  handleSortingDataCreated,\n}: IProps) {\n  const classes = useStyles();\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Done</TableCell>\n            <TableCell>OneCId</TableCell>\n            <TableCell\n              className={classes.cursorPointer}\n              onClick={handleSortingDataCreated}\n            >\n              Date\n            </TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Brand</TableCell>\n            <TableCell align=\"right\">Cat</TableCell>\n            <TableCell\n              className={classes.cursorPointer}\n              align=\"right\"\n              onClick={handleSorting}\n            >\n              Photo Fold\n            </TableCell>\n            <TableCell align=\"right\">Photo Site</TableCell>\n            <TableCell align=\"right\">Video</TableCell>\n            <TableCell align=\"right\">Attr</TableCell>\n            <TableCell align=\"right\">Notes</TableCell>\n            <TableCell align=\"right\">To Site</TableCell>\n            <TableCell align=\"right\">Del</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rowsInWork.map((row: IRow) => (\n            <TableRowComponent key={row.uuid} myRow={row} ready={ready} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IRow } from '../interfaces';\nimport { Button, Grid, Hidden } from '@material-ui/core';\nimport {\n  toggleSnakbarAction,\n  fetchRowsFromServerThunk,\n  fillOutRowWithDataThunk,\n  checkAllAttributesAction,\n  orderItemsAction,\n  orderItemsByDateCreateAction,\n} from '../store/actions';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport { Typography } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { IState } from '../store/reducers';\n\nimport Spiner from './Spiner';\nimport TableComponent from './Table';\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function TestPage() {\n  const dispatch = useDispatch();\n  const error = useSelector((state: any) => {\n    return state.mainState.errorMessage;\n  });\n  const { openSnakbar } = useSelector((state: any) => state.mainState);\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    dispatch(toggleSnakbarAction(false));\n  };\n\n  const [oneCId, setOneCId] = useState<number>(0);\n\n  useEffect(() => {\n    dispatch(fetchRowsFromServerThunk());\n  }, [dispatch]);\n\n  const rowsInWork: IRow[] = useSelector((state: any) => {\n    return state.mainState.rowsInWork;\n  });\n  console.log(rowsInWork);\n\n  const handleChangeOneC = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(event.target.value);\n    const newValue = isNaN(value) ? 0 : value;\n    setOneCId(newValue);\n  };\n\n  const handleAddNewRowEnter = (\n    event: React.KeyboardEvent<HTMLInputElement>\n  ) => {\n    if (event.key === 'Enter') {\n      dispatch(fillOutRowWithDataThunk(oneCId));\n      // setOneCId(0);\n    }\n  };\n\n  const handleAddNewRow = () => {\n    dispatch(fillOutRowWithDataThunk(oneCId));\n\n    // checking All updates for photo, video , etc..\n    dispatch(checkAllAttributesAction());\n    setOneCId(0);\n  };\n  const handleUpdateInfo = () => {\n    dispatch(checkAllAttributesAction());\n  };\n\n  let errorArr = [];\n  for (const key in error) {\n    errorArr.push(JSON.stringify({ [key]: error[key] }));\n  }\n\n  const isLoading = useSelector((state: IState) => {\n    return state.mainState.isLoading;\n  });\n\n  const handleSorting = () => {\n    dispatch(orderItemsAction());\n  };\n\n  const handleSortingDataCreated = () => {\n    dispatch(orderItemsByDateCreateAction());\n  };\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={4} md={2}>\n          <TextField\n            label=\"1C ID\"\n            variant=\"outlined\"\n            value={oneCId}\n            onChange={handleChangeOneC}\n            size=\"small\"\n            fullWidth\n            onKeyDown={handleAddNewRowEnter}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <Fab\n            type=\"submit\"\n            onClick={handleAddNewRow}\n            color=\"primary\"\n            size=\"small\"\n            aria-label=\"add\"\n          >\n            <AddIcon />\n          </Fab>\n        </Grid>\n        <Hidden mdDown>\n          <Grid item xs={2}>\n            <Typography variant=\"h6\">\n              Total on Page: {rowsInWork.length}\n            </Typography>\n          </Grid>\n        </Hidden>\n        <Grid item xs={4}>\n          {isLoading ? (\n            <Spiner />\n          ) : (\n            <Button\n              onClick={handleUpdateInfo}\n              variant=\"outlined\"\n              color=\"primary\"\n            >\n              UPDATE INFO\n            </Button>\n          )}\n        </Grid>\n        <Grid item xs={12}>\n          <TableComponent\n            rowsInWork={rowsInWork}\n            handleSorting={handleSorting}\n            handleSortingDataCreated={handleSortingDataCreated}\n          />\n        </Grid>\n      </Grid>\n\n      <Snackbar\n        open={openSnakbar}\n        autoHideDuration={16000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {errorArr.map((str: string, i: number) => (\n            <div key={i}>{str}</div>\n          ))}\n        </Alert>\n      </Snackbar>\n    </React.Fragment>\n  );\n}\n\n// Need to make alert working later on\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IRow } from '../interfaces';\nimport { Grid } from '@material-ui/core';\nimport { Theme, createStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport TableComponent from './Table';\nimport { fetchRowsFromServerReadyThunk } from '../store/actions';\nimport { IState } from '../store/reducers';\nimport { groupBy } from 'lodash';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      minWidth: 650,\n    },\n    topRowNumber: {\n      padding: theme.spacing(2),\n    },\n  })\n);\n\nexport default function ReadyPage() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchRowsFromServerReadyThunk());\n  }, [dispatch]);\n\n  const rowsReady: IRow[] = useSelector((state: IState) => {\n    return state.mainState.rowsReady;\n  });\n\n  const groupedRows = groupBy(rowsReady, (row: IRow) => row.dateChanged);\n\n  const day = (dayGroup: any, keyName: string) => (\n    <React.Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Typography variant=\"h6\">Date: {keyName}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body1\">Total: {dayGroup.length}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <TableComponent rowsInWork={dayGroup} ready={true} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"body1\">\n            Total on Page: {rowsReady.length}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          {Object.keys(groupedRows).map((keyName: string) => (\n            <Grid key={keyName} item xs={12}>\n              {day(groupedRows[keyName], keyName)}\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport LinkIcon from '@material-ui/icons/Link';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\ninterface ICheckRow {\n  id: number;\n  one_c_id: number;\n  name: string;\n  brand: string;\n  cat_number: string;\n  have_photo: boolean;\n}\ninterface IProps {\n  rows: ICheckRow[];\n}\n\nexport default function BasicTable({ rows }: IProps) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">One_c_id</TableCell>\n            <TableCell align=\"right\">Brand</TableCell>\n            <TableCell align=\"right\">Cat Number</TableCell>\n            <TableCell align=\"right\">Link to Site</TableCell>\n            <TableCell align=\"right\">Link to Product</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.one_c_id}</TableCell>\n              <TableCell align=\"right\">{row.brand}</TableCell>\n              <TableCell align=\"right\">{row.cat_number}</TableCell>\n              <TableCell align=\"right\">\n                <a\n                  href={`https://angara77.com/porter-5718143000-${row.one_c_id}/`}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <LinkIcon color=\"primary\" />\n                </a>\n              </TableCell>\n              <TableCell align=\"right\">\n                <a\n                  href={`https://partshub.tk/product/list/${row.id}/`}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <LinkIcon color=\"primary\" />\n                </a>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { Button, Grid, Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Urls } from '../config';\nimport Spiner from './Spiner';\nimport CheckTable from './CheckPhotoTable';\n\nexport default function CheckPhotos() {\n  const [loading, setLoading] = useState(false);\n  const [photos, setPhotos] = useState<any[]>([]);\n\n  const getNoPhotoList = async () => {\n    setLoading(true);\n    const res = await axios.get(Urls.noPhotosList);\n\n    const resFold = await axios.get(Urls.photoFolder);\n    const folders = resFold.data.fld;\n    const result: any[] = [];\n    for (let item of res.data) {\n      if (item.one_c_id) {\n        if (folders.includes(item.one_c_id.toString())) {\n          result.push(item);\n        }\n      }\n    }\n    setPhotos(result);\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          {loading ? (\n            <React.Fragment>\n              <Grid item xs={12}>\n                <Spiner />\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"h6\">\n                  Wait products checking now...\n                </Typography>\n              </Grid>\n            </React.Fragment>\n          ) : (\n            <Button onClick={getNoPhotoList} variant=\"outlined\">\n              Get Items\n            </Button>\n          )}\n        </Grid>\n        <Grid item xs={6}>\n          Total Photos Missing: {photos.length}\n        </Grid>\n        <Grid item xs={12}>\n          <CheckTable rows={photos} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.scss';\nimport AppBar from './components/AppBar';\nimport MainTable from './components/MainTable';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ReadyPage from './components/ReadyPage';\nimport Box from '@material-ui/core/Box';\nimport CheckPhotos from './components/CheckPhotos';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={'/react/'}>\n      <div>\n        <AppBar />\n        <Box className=\"containerBox\">\n          <Switch>\n            <Route exact path=\"/testpage/\" component={ReadyPage} />\n            <Route exact path=\"/checkphotos/\" component={CheckPhotos} />\n            <Route path=\"/\" component={MainTable} />\n          </Switch>\n        </Box>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { IRow } from '../interfaces';\nimport { MyAction } from './actions';\n\nimport { actionTypes } from './types';\nimport { orderBy } from 'lodash';\n\nexport interface IMainState {\n  rowsInWork: IRow[];\n  rowsReady: IRow[];\n  errorMessage: any;\n  openSnakbar: boolean;\n  isLoading: boolean;\n}\nexport interface IState {\n  mainState: IMainState;\n}\n\nconst initState: IMainState = {\n  rowsInWork: [],\n  rowsReady: [],\n  errorMessage: null,\n  openSnakbar: false,\n  isLoading: false,\n};\n\nconst mainReducer = (state: IMainState = initState, action: MyAction | any) => {\n  switch (action.type) {\n    case actionTypes.FETCH_ROWS_IN_WORK:\n      return {\n        ...state,\n        rowsInWork: action.payload,\n      };\n    case actionTypes.FETCH_ROWS_READY:\n      return { ...state, rowsReady: action.payload };\n    case actionTypes.ADD_EMPTY_ROW:\n      return { ...state, rowsInWork: [...state.rowsInWork, action.payload] };\n    case actionTypes.DELETE_ROW:\n      return {\n        ...state,\n        rowsInWork: state.rowsInWork.filter(\n          (row: IRow) => row.uuid !== action.payload\n        ),\n      };\n    case actionTypes.SET_ONE_C_ID:\n      const index = state.rowsInWork.findIndex(\n        (row: IRow) => row.uuid === action.payload\n      );\n      state.rowsInWork[index].oneCId = action.oneCId;\n\n      return {\n        ...state,\n        rowsInWork: [...state.rowsInWork],\n      };\n    case actionTypes.TOGGLE_DONE:\n      const idx = state.rowsInWork.findIndex(\n        (row: IRow) => row.uuid === action.payload.uuid\n      );\n      state.rowsInWork[idx].isDone = action.isDone;\n      return { ...state, rowsInWork: [...state.rowsInWork] };\n    case actionTypes.FETCH_DATA_A77:\n      return { ...state };\n    case actionTypes.SET_ERROR_MESSAGE:\n      return { ...state, errorMessage: action.payload };\n    case actionTypes.TOGGLE_SNACKBAR:\n      return { ...state, openSnakbar: action.payload };\n    case actionTypes.UPDATE_ROWS_ATTRS:\n      return { ...state, rowsInWork: action.payload };\n    case actionTypes.UPDATE_ROWS_READY_ATTRS:\n      return { ...state, rowsReady: action.payload };\n    case actionTypes.IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    case actionTypes.CHANGE_DESCRIPTION:\n      const descRow = state.rowsInWork.findIndex(\n        (row: IRow) => row.uuid === action.payload\n      );\n      state.rowsInWork[descRow].description = action.description;\n      return {\n        ...state,\n        rowsInWork: [...state.rowsInWork],\n      };\n    case actionTypes.CHANGE_VIDEO_URL:\n      const videoRow = state.rowsInWork.findIndex(\n        (row: IRow) => row.uuid === action.payload\n      );\n      state.rowsInWork[videoRow].videoUrl = action.videoUrl;\n      return {\n        ...state,\n        rowsInWork: [...state.rowsInWork],\n      };\n    case actionTypes.PUT_ROW_TO_SERVER:\n      const changeRow = state.rowsInWork.findIndex(\n        (row: IRow) => row.uuid === action.payload.uuid\n      );\n      state.rowsInWork[changeRow] = action.payload;\n      return {\n        ...state,\n        rowsInWork: [...state.rowsInWork],\n      };\n    case actionTypes.ORDER_ROWS:\n      return {\n        ...state,\n        rowsInWork: [...orderBy(state.rowsInWork, ['photo'], 'desc')],\n      };\n    case actionTypes.ORDER_ROWS_BY_DATE_CREATED:\n      return {\n        ...state,\n        rowsInWork: [...orderBy(state.rowsInWork, ['dateCreated'], 'desc')],\n      };\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  mainState: mainReducer,\n});\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk, { ThunkMiddleware } from 'redux-thunk';\n\nimport { IState, rootReducer } from './reducers';\n\nexport default createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk as ThunkMiddleware<IState, any>))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}